@page
@model NoName.Pages.Account.Manage.IndexModel
@namespace NoName.Pages.Account.Manage
@inject SignInManager<ApplicationUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    ViewData["ActivePage"] = ManageNavPages.Profile;
}

<h1>Manage your account</h1>

<div>
    <h4>Change your account settings</h4>
    <hr />
    <div class="row">
        <div>
            <ul class="nav nav-pills flex-column">
                <li class="nav-item"><a class="nav-link @ManageNavPages.ProfileNavClass(ViewContext)" id="profile" asp-page="./Profile">프로필</a></li>
                <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">이메일</a></li>
                <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">비밀번호 변경</a></li>
                @if (hasExternalLogins)
                {
                    <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
                }
                <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">2-Factor 인증</a></li>
                <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">개인정보 관리</a></li>
                @*<li class="nav-item"><a class="nav-link @ManageNavPages.ProfileNavClass(ViewContext)" id="profile" asp-page="./Profile">프로필</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">이메일</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">비밀번호 변경</a></li>
        @if (hasExternalLogins)
        {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
        }
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">2-Factor 인증</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">개인정보 관리</a></li>*@
            </ul>
        </div>

        <div class="col-md-9">
            @*@ManageNavPages.PageNavClass(ViewContext, ManageNavPages.currentPage);*@

            @*@RenderBody()*@
        </div>
    </div>
</div>

@*<h4>@ViewData["Title"]</h4>
    <partial name="_StatusMessage" model="Model.StatusMessage" />
    <div class="row">
        <div class="col-md-6">
            <form id="profile-form" method="post">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Username"></label>
                    <input asp-for="Username" class="form-control" disabled />
                </div>
                <div class="form-group">
                    <label asp-for="Input.PhoneNumber"></label>
                    <input asp-for="Input.PhoneNumber" class="form-control" />
                    <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                </div>
                <button id="update-profile-button" type="submit" class="btn btn-primary">Save</button>
            </form>
        </div>
    </div>*@

@*@section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }*@